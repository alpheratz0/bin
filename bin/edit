#!/bin/sh

#
# edit known config
# files and scripts
#

main() {
	parsed_args=$(getopt -o h -l help -n 'edit' -- "$@")
	getopt_exit_code=$?

	if [ $getopt_exit_code -ne 0 ]; then
		exit 1
	fi

	eval set -- "$parsed_args"

	while :; do
		case "$1" in
			-h | --help ) show_help; exit 1 ;;
			-- ) shift; break ;;
			* ) break ;;
		esac
	done

	target="$1"

	[ -z "$target" ] &&
		die 'target cannot be empty'

	case "$target" in
		alacritty ) vim ~/.config/alacritty/alacritty.yml ;;
		vim ) vim ~/.vimrc ;;
		zsh ) vim ~/.zshrc ;;
		zprofile ) vim ~/.zprofile ;;
		xres ) vim ~/.Xresources ;;
		xinit ) vim ~/.xinitrc ;;
		git ) vim ~/.config/git/config ;;
		htop ) vim ~/.config/htop/htoprc ;;
		i3 ) vim ~/.config/i3/config ;;
		polybar ) vim ~/.config/polybar/config ;;
		picom ) vim ~/.config/picom/picom.conf ;;
		rofi ) vim ~/.config/rofi/theme.rasi ;;
		dunst ) vim ~/.config/dunst/dunstrc ;;
	esac
}

die() {
	printf "edit: %s\n" "$@" >&2
	exit 1
}

show_help() {
	echo Usage: edit [ -h ] TARGET
	echo Options are:
	echo '     -h | --help                    display this message and exit'
}

main "$@"

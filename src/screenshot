#!/bin/sh

#
# take a screenshot of the whole screen
# or the selected area and send
# a notification using dunst
#

opt_area=false
format="%Y%m%d%H%M%S.png"
outdir="$HOME/.screenshots"

main()
{
	parsed_args=$(getopt -o ah -l area,help -n 'screenshot' -- "$@")
	getopt_exit_code=$?

	if [ $getopt_exit_code -ne 0 ]; then
		exit 1
	fi

	eval set -- "$parsed_args"

	while :; do
		case "$1" in
			-a | --area ) opt_area=true; shift ;;
			-h | --help ) show_help; exit 1 ;;
			-- ) shift; break ;;
			* ) break ;;
		esac
	done

	[ -d "$outdir" ] ||
		mkdir "$outdir"

	if $opt_area; then
		area=$(slop --quiet --format="%x,%y,%w,%h") ||
			die 'selection cancelled'
		notification_cmd="notify-send 'area screenshot taken' 'file name: \$f'"
		scrot -d 1 -z "$format" -a "$area" -e "mv \$f $outdir && $notification_cmd" 2>/dev/null
		exit 0
	fi

	notification_cmd="notify-send 'screenshot taken' 'file name: \$f'"
	scrot -z "$format" -e "mv \$f $outdir && $notification_cmd"
}

die()
{
	printf "screenshot: %s\n" "$@" >&2
	exit 1
}

show_help()
{
	echo Usage: screenshot [ -ah ]
	echo Options are:
	echo '     -a | --area                    take an area screenshot instead of the full screen'
	echo '     -h | --help                    display this message and exit'
}

main "$@"

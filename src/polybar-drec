#!/bin/sh

#
# desktop recorder
# ipc for polybar
#

# colors
bgcolor='000000'
fgcolor='FF0000'

opt_default=false
opt_current=false

main()
{
	parsed_args=$(getopt -o DChp: -n 'polybar-drec' -- "$@")
	getopt_exit_code=$?

	if [ $getopt_exit_code -ne 0 ]; then
		exit 1
	fi

	eval set -- "$parsed_args"

	while :; do
		case "$1" in
			-D ) opt_default=true; shift ;;
			-C ) opt_current=true; shift ;;
			-p ) barpid=$2; shift 2 ;;
			-h ) usage ;;
			-- ) shift; break ;;
			* ) break ;;
		esac
	done

	$opt_default &&
		show_default

	$opt_current &&
		show_current

	if [ -f /tmp/vrecord.pid ]; then
		stop_recording
	else
		start_recording
	fi
}

ellapsed()
{
	since="$1"
	now=$(date +%s)
	delta=$((now - since))
	minutes=$((delta / 60))
	seconds=$((delta % 60))
	printf "%02d:%02d\n" $minutes $seconds
}

start_recording()
{
	start=$(date +%s)
	recname=$(date +%Y%m%d%H%M%S)

	audiodst="$HOME/.screenrec/$recname/audio.mp3"
	videodst="$HOME/.screenrec/$recname/video.mkv"

	sink=$(pactl list short sources | \
		awk '{ print $2 }' | \
		grep 'monitor$' | \
		head -n1
	)

	# rw-r--r-- for files
	# rwxr-xr-x for directories
	umask 022

	mkdir -p "$HOME/.screenrec/$recname"

	echo "%{B#$bgcolor}%{F#$fgcolor}   Starting  " > /tmp/record
	polybar-msg -p "$barpid" hook rec 2

	ffmpeg -f pulse -ac 2 -i "$sink" \
		   -ab 320k -acodec libmp3lame \
		   -y "$audiodst" 2>/dev/null>&2 &

	echo "$!" > /tmp/vrecord.pid

	ffmpeg -framerate 60 -f x11grab \
		   -i :0.0 -c:v libx264 -crf 0 -preset ultrafast \
		   -y "$videodst" 2>/dev/null>&2 &

	echo "$!" > /tmp/arecord.pid

	sleep 0.5
	while [ -f /tmp/vrecord.pid ]; do
		echo "%{A1:polybar-drec -p $barpid:}%{B#$bgcolor}%{F#$fgcolor}   STOP $(ellapsed "$start")  %{A}" > /tmp/record
		polybar-msg -p "$barpid" hook rec 2
		sleep 1
	done;
}

stop_recording()
{
	polybar-msg -p "$barpid" hook rec 1
	/bin/kill -s INT "$(cat /tmp/vrecord.pid)"
	/bin/kill -s INT "$(cat /tmp/arecord.pid)"

	rm -f /tmp/vrecord.pid
	rm -f /tmp/arecord.pid
	rm -f /tmp/record
}

show_default()
{
	echo "%{A1:polybar-drec -p $barpid:}%{B#$bgcolor}%{F#$fgcolor}   Rec  %{A}"
	exit 0
}

show_current()
{
	cat /tmp/record
	exit 0
}

die()
{
	printf "polybar-drec: %s\n" "$@" >&2
	exit 1
}

usage()
{
	echo usage: polybar-drec [-DCh] [-p pid]
	exit 0
}

main "$@"

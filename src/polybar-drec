#!/bin/sh

#
# desktop recorder
# ipc for polybar
#

PD_THEME_BG_COLOR="000000"
PD_THEME_FG_COLOR="FF0000"

PD_RUNTIME_PATH="$XDG_RUNTIME_DIR/polybar-drec"
PD_PID_PATH="$PD_RUNTIME_PATH/self.pid"
PD_CURRENT_MSG_PATH="$PD_RUNTIME_PATH/message"

main()
{
	umask 022
	mkdir -p "$PD_RUNTIME_PATH"

	case "$1" in
		msg ) get_message; return ;;
	esac

	toggle_recording_on_off
}

get_message()
{
	if test -f "$PD_PID_PATH" && /bin/kill -0 "$(cat "$PD_PID_PATH")"; then
		head -n1 "$PD_CURRENT_MSG_PATH"
	else
		echo "%{A1:polybar-drec:}%{B#$PD_THEME_BG_COLOR}%{F#$PD_THEME_FG_COLOR}   Rec  %{A}"
	fi
}

set_message()
{
	echo "$@" > "$PD_CURRENT_MSG_PATH"
	polybar-msg action "#rec.hook.0"
}

ellapsed()
{
	since="$1"
	now=$(date +%s)
	delta=$((now - since))
	minutes=$((delta / 60))
	seconds=$((delta % 60))
	printf "%02d:%02d\n" $minutes $seconds
}

toggle_recording_on_off()
{
	if test -f "$PD_PID_PATH" && /bin/kill -0 "$(cat "$PD_PID_PATH")"; then
		stop_recording
	else
		start_recording
	fi
}

start_recording()
{
	recname=$(date +%Y%m%d%H%M%S)
	filename="$HOME/.screenrec/$recname.mkv"

	sink=$(pactl list short sources | \
		awk '{ print $2 }' | \
		grep 'monitor$' | \
		head -n1
	)

	# rw-r--r-- for files
	# rwxr-xr-x for directories
	umask 022

	mkdir -p "$HOME/.screenrec"

	set_message "%{B#$PD_THEME_BG_COLOR}%{F#$PD_THEME_FG_COLOR}   Starting  "

	ffmpeg \
		   -f pulse \
		   -ac 2 -i "$sink" \
		   -f x11grab \
		   -framerate 60 \
		   -i :0.0 \
		   -c:v libx264 \
		   -crf 0 \
		   -preset ultrafast \
		   -y "$filename" 2>/dev/null>&2 &

	echo "$!" > "$PD_PID_PATH"

	start=$(date +%s)
	sleep 0.5
	while test -f "$PD_PID_PATH" && /bin/kill -0 "$(cat "$PD_PID_PATH")"; do
		set_message "%{A1:polybar-drec:}%{B#$PD_THEME_BG_COLOR}%{F#$PD_THEME_FG_COLOR}   STOP $(ellapsed "$start")  %{A}"
		sleep 1
	done;
}

stop_recording()
{
	/bin/kill -s INT "$(cat "${PD_PID_PATH}")"
	/bin/rm -f "${PD_PID_PATH}"
	polybar-msg action "#rec.hook.0"
}

main "$@"

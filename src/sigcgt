#!/bin/sh

#
# display the signals a process is
# listening to in a human readable format
#

main()
{
	parsed_args=$(getopt -o h -n 'sigcgt' -- "$@")
	getopt_exit_code=$?

	if [ $getopt_exit_code -ne 0 ]; then
		exit 1
	fi

	eval set -- "$parsed_args"

	while :; do
		case "$1" in
			-h ) usage ;;
			-- ) shift; break ;;
			* ) break ;;
		esac
	done

	pid=$1

	[ -z "$pid" ] &&
		die 'process id must be specified'

	[ "$pid" -eq "$pid" ] 2>/dev/null ||
		die 'process id must be a number'

	[ -f /proc/"$pid"/status ] ||
		die 'process not found'

	hexsig=$(awk '/^SigCgt/ { print toupper($2) }' "/proc/$pid/status")
	binsig="$(echo "obase=2;ibase=16;$hexsig" | bc | rev | grep -o .)"
	printnl=false
	signal=1

	for bit in $binsig; do
		if [ "$bit" -eq 1 ] && [ "$signal" -ne 32 ] && [ "$signal" -ne 33 ]; then
			printf "%s " "$(kill -l $signal)"
			printnl=true
		fi

		signal=$((signal+1))
	done

	$printnl && printf "\n"
}

die()
{
	printf "sigcgt: %s\n" "$@" >&2
	exit 1
}

usage()
{
	echo usage: sigcgt [-h] pid
	exit 0
}

main "$@"

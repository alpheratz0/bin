#!/bin/sh

#
# cancellable shutdown
# ipc for polybar
#

# colors
bgcolor='ff0000'
fgcolor='ffffff'

opt_default=false
opt_current=false

main() {
	parsed_args=$(getopt -o p:DCc:h -l pid:,default,current,countdown:,help -n 'polyipc-shutdown' -- "$@")
	getopt_exit_code=$?

	if [ $getopt_exit_code -ne 0 ]; then
		exit 1
	fi

	eval set -- "$parsed_args"

	while :; do
		case "$1" in
			-C | --current ) opt_current=true; shift ;;
			-D | --default ) opt_default=true; shift ;;
			-p | --pid ) barpid=$2; shift 2 ;;
			-c | --countdown ) countdown=$2; shift 2 ;;
			-h | --help ) show_help; exit 1 ;;
			-- ) shift; break ;;
			* ) break ;;
		esac
	done

	$opt_default &&
		show_default

	$opt_current &&
		show_current

	[ -z "$countdown" ] &&
		countdown=5

	[ "$countdown" -eq "$countdown" ] 2>/dev/null ||
		die 'countdown value must be a number'

	[ "$countdown" -gt 0 ] ||
		die 'countdown value must be a positive number'

	if [ -f /tmp/shutdown.pid ]; then
		cancel_shutdown
	else
		start_shutdown
	fi
}

show_default() {
	echo "%{A1:polyipc-shutdown --countdown 5 --pid $barpid:}%{B#$bgcolor}%{F#$fgcolor}  ⏻  %{A}"
	exit 0
}

show_current() {
	cat /tmp/shutdown
	exit 0
}

start_shutdown() {
	# rw-r--r-- for files
	# rwxr-xr-x for directories
	umask 022

	echo $$ > /tmp/shutdown.pid

	for i in $(seq $countdown -1 1); do
		echo "%{A1:polyipc-shutdown --countdown 5 --pid $barpid:}%{B#$bgcolor}%{F#$fgcolor}  祥 ${i}s  %{A}" > /tmp/shutdown
		polybar-msg -p "$barpid" hook shutdown 2
		sleep 1
	done

	echo "%{B#$bgcolor}%{F#$fgcolor}  Shutting down..." > /tmp/shutdown
	polybar-msg -p "$barpid" hook shutdown 2

	systemctl poweroff
}

cancel_shutdown() {
	/bin/kill -s KILL "$(cat /tmp/shutdown.pid)"
	rm /tmp/shutdown.pid
	polybar-msg -p "$barpid" hook shutdown 1
}

die() {
	printf "polyipc-shutdown: %s\n" "$@" >&2
	exit 1
}

show_help() {
	echo Usage: polyipc-shutdown [ -hDC ] [ -p POLYBAR_PID ] [ -c COUNTDOWN ]
	echo Options are:
	echo '     -p | --pid                     polybar bar process id'
	echo '     -D | --default                 show default message'
	echo '     -C | --current                 show current message'
	echo '     -c | --countdown               seconds to wait before actually shutting down'
	echo '     -h | --help                    display this message and exit'
}

main "$@"

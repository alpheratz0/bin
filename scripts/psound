#!/bin/sh

# 
# change the volume of the specified
# application
#

main() {
	parsed_args=$(getopt -o h -l help -n 'psound' -- "$@")
	getopt_exit_code=$?
	
	if [ $getopt_exit_code -ne 0 ]; then
		exit 1
	fi

	eval set -- "$parsed_args"

	while :; do
		case "$1" in
			-h | --help ) show_help; exit 1 ;;
			-- ) shift; break ;;
			* ) break ;;
		esac
	done
	
	query="$1"
	volume="$2"

	[ -z "$query" ] &&
		die 'you must specify a query'
	
	[ -z "$volume" ] &&
		die 'you must specify the volume level'

	[ "$volume" -eq "$volume" ] 2>/dev/null ||
		die 'volume must be a number'

	[ "$volume" -lt 0 ] &&
		volume=0

	match=$(
			pactl list sink-inputs | 
			awk 'BEGIN { FS="\"" } /application\.name/{ print $2 }' | 
			grep -iF "$query" | 
			head -n1
	)

	[ -z "$match" ] &&
		die 'search query didnt match any application'

	sinkid=$(
			 pactl list sink-inputs | 
			 grep -F "application.name = \"$match\"" -B 30 | 
			 rev | 
			 grep '# tupnI kniS' | 
			 cut -d '#' -f1 | 
			 rev
	)

	pactl set-sink-input-volume "$sinkid" "$volume%"
}

die() {
	printf "psound: %s\n" "$@" >&2
	exit 1
}

show_help() {
	echo Usage: psound [ -h ] QUERY VOLUME
	echo Options are:
	echo '     -h | --help                    display this message and exit'
}

main "$@"

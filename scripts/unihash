#!/bin/sh

#
# convert all files in the specified directory
# to the format hash.extension and move duplicated
# ones to the repeated directory
#

OPT_PROMPT=true
OPT_QUIET=false
DIRECTORY='.'

main() {
	parsed_args=$(getopt -o Pqh -l no-prompt,quiet,help -n 'unihash' -- "$@")
	getopt_exit_code=$?

	if [ $getopt_exit_code -ne 0 ] ; then
		exit 1
	fi

	eval set -- "$parsed_args" 

	while :; do
		case "$1" in
			-P | --no-prompt ) OPT_PROMPT=false; shift ;;
			-q | --quiet ) OPT_QUIET=true; shift ;;
			-h | --help ) show_help; exit 1 ;;
			-- ) shift; break ;;
			* ) break ;;
		esac
	done

	[ -n "$1" ] && DIRECTORY="$1"
	[ -d "$DIRECTORY" ] || die 'target directory doesnt exist'

	if $OPT_PROMPT ; then
		num="$(head -c2 /dev/random | od -An -t u2 - | tr -d ' ')"
		printf "please enter %s to confirm (%s): " "$num" "$(basename "$(realpath "$DIRECTORY")")"
		read -r guess
		[ "$num" != "$guess" ] && die 'numbers didnt match'
	fi

	cd "$DIRECTORY" || exit 1

	mkdir repeated 2>/dev/null

	find . -maxdepth 1 -type f | { 
		while read -r f; do
			file_name=$(basename "$f")
			file_hash=$(md5sum "$f" | awk '{ print $1 }')
			basename "$f" | grep -Fq '.' && 
				extension=".$(basename "$f" | awk -F. '{ print $NF }')" ||
				extension=''
		
			file_output="$file_hash$extension"
		
			[ "$file_name" = "$file_output" ] && continue
		
			if [ -f "$file_output" ] ; then
				if [ ! -f "repeated/$file_output" ] ; then
					mv -n "$f" "repeated/$file_output"
					$OPT_QUIET || printf "%s\nrepeated/%s\n" "$f" "$file_output" >&2
				fi
				continue
			fi

			mv -n "$f" "$file_output"
			$OPT_QUIET || printf "%s\n%s\n" "$f" "$file_output" >&2
		done
	}
}

die() {
	printf "error: %s\n" "$@" >&2
	exit 1
}

show_help() {
	echo Usage: unihash [ -Pqh ] DIRECTORY
	echo Options are:
	echo '     -P | --no-prompt               disable the prompt of a random number'
	echo '     -q | --quiet                   run the program silently'
	echo '     -h | --help                    display this message and exit'
}

main "$@"
